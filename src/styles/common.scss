/* 定义正方形 */
@mixin square($size) {
  width: $size;
  height: $size;
}
/* 单行垂直居中 */
@mixin middle($size) {
  height: $size;
  line-height: $size;
}
@mixin square-center-middle($size) {
  @include square($size);
  @include middle($size);
  text-align: center;
}
/* 超出范围 显示 ... */
@mixin text-overflow($width: 100%, $display: block) {
  width: $width;
  display: $display;
  white-space: nowrap;
  -ms-text-overflow: ellipsis;
  text-overflow: ellipsis;
  overflow: hidden;
}
/* 清除浮动 */
@mixin clearfix {
  &:after {
    clear: both;
    content: ".";
    display: block;
    height: 0;
    line-height: 0;
    overflow: hidden;
  }
  *height: 1%;
}
@mixin flex-center(
  $direction: row,
  $justify: center,
  $align: center,
  $flex-wrap: null
) {
  display: -webkit-flex;
  display: flex;
  @if ($direction!=null) {
    flex-direction: $direction;
  }
  @if ($justify!=null) {
    justify-content: $justify;
  }
  @if ($align!=null) {
    align-items: $align;
  }
  @if ($flex-wrap != null) {
    flex-wrap: $flex-wrap;
  }
}
/* 绝对定位  参数顺序：上右下左 */
@mixin positionAbsolute($top: null, $right: null, $bottom: null, $left: null) {
  position: absolute;
  @if ($left!= "" & & $left!=null) {
    left: $left;
  }
  @if ($right!= "" & & $right!=null) {
    right: $right;
  }
  @if ($top!= "" & & $top!=null) {
    top: $top;
  }
  @if ($bottom!= "" & & $bottom!=null) {
    bottom: $bottom;
  }
}
/* 左浮动 */
@mixin float-left($width: 19%, $margin-right: 1.2%) {
  width: $width;
  float: left;
  @if ($margin-right!=null) {
    margin-right: $margin-right;
  }
}
/* 右浮动 */
@mixin float-Right($width: 19%, $margin-left: 1.2%) {
  width: $width;
  float: right;
  @if ($margin-left!=null) {
    margin-left: $margin-left;
  }
}
/* 渐变(从上到下） */
@mixin linear-gradient(
  $direction: bottom,
  $color1: transparent,
  $color2: transparent
) {
  background: linear-gradient(to $direction, $color1, $color2);
}
/* 三色渐变(从上到下） */
@mixin linear-gradient3(
  $direction: bottom,
  $color1: transparent,
  $color2: transparent,
  $color3: transparent
) {
  background: linear-gradient(to $direction, $color1, $color2, $color3);
}
/* 行高 */
@mixin line-height($height: 30px, $line-height: 30px) {
  @if ($height != null) {
    height: $height;
  }
  @if ($line-height!=null) {
    line-height: $line-height;
  }
}
/* 画三角形 */
@mixin triangle($width: 10px, $direction: top, $color: black) {
  border: $width solid transparent;
  @if ($direction == top) {
    /* 上三角 */
    border-bottom-color: $color;
  }
  @if ($direction == bottom) {
    /* 下三角 */
    border-top-color: $color;
  }
  @if ($direction == left) {
    /* 左三角 */
    border-right-color: $color;
  }
  @if ($direction == right) {
    /* 右三角 */
    border-left-color: $color;
  }
}
/* 文本阴影 */
@mixin text-show(
  $h-shadow: 0px,
  $v-shadow: 0px,
  $blur: 10px,
  $color: rgba(0, 180, 255, 0.7)
) {
  text-shadow: $h-shadow $v-shadow $blur $color;
}
/* 链接样式 */
@mixin hoverStyle(
  $style: (
    color: #d9fdff,
  ),
  $hoverStyle: (
    color: #306eff,
  )
) {
  text-decoration: none;
  /*  @each $key, $value in $style {
    #{$key}: #{$value};
  } */
  @if ($hoverStyle!=null & & $hoverStyle!= "") {
    &:hover {
      /*  @each $key, $value in $hoverStyle {
        #{$key}: #{$value};
      } */
    }
  }
}
/* css3动画 默认3s宽度到200px */
@mixin animation(
  $from: (
    width: 0px,
  ),
  $to: (
    width: 200px,
  ),
  $name: mymove,
  $animate: mymove 2s 1 linear infinite
) {
  -webkit-animation: $animate;
  -o-animation: $animate;
  animation: $animate;
  /* @keyframes #{$name} {
    from {
      @each $key, $value in $from {
        #{$key}: #{$value};
      }
    }
    to {
      @each $key, $value in $to {
        #{$key}: #{$value};
      }
    }
  } */

  /*  @-webkit-keyframes #{$name} {
    from {
      @each $key, $value in $from {
        $key: $value;
      }
    }
    to {
      @each $key, $value in $to {
        $key: $value;
      }
    }
  } */
}
/* 圆形盒子 */
@mixin circle($size) {
  border-radius: $size / 2 !important;
}
